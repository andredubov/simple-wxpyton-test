name: Build Release

on:
  release:
    types: [published]

env:
  APP_NAME: 'myapp'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            script-ext: '.exe'
            shell: powershell
            python-version: '3.11'
            python-arch: 'x64'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-arch }}
        
      - name: Install dependencies
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            pip install -r requirements.txt
          }
        shell: powershell

      - name: Build with Nuitka
        if: matrix.os == 'windows-latest'
        run: |
          $nuitkaArgs = @(
            "--standalone",
            "--onefile", 
            "--assume-yes-for-downloads,"
            "--windows-console-mode=disable",
            "--include-package=wx",
            "--include-package-data=wx",
            "--noinclude-unittest-mode=nofollow",
            "--include-data-files=./assets/*=assets/",
            "main.py"
          )
          python -m nuitka $nuitkaArgs
        shell: powershell

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ format('./dist/{0}/{1}{2}', matrix.os, env.APP_NAME, matrix.script-ext)}}
          asset_name: ${{ format('{0}-{1}-{2}{3}', env.APP_NAME, matrix.os, github.ref_name, matrix.script-ext) }}
          asset_content_type: application/octet-stream