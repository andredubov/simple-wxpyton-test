name: Build Win32

on:
  release:
    types: [published]

jobs:
  build-win32:
    runs-on: ubuntu-20.04  # Используем Ubuntu 20.04 где есть Python 3.7
    outputs:
      upload_url: ${{ steps.set-upload.outputs.upload_url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7.9'
          
      - name: Install cross-compilation environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            mingw-w64 \
            gcc-mingw-w64-i686 \
            ccache \
            wine \
            patchelf
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi
          
      - name: Build for Windows 32-bit
        run: |
          python -m nuitka \
            --onefile \
            --standalone \
            --windows-console-mode=disable \
            --include-package=wx \
            --follow-imports \ 
            --include-package-data=wx \
            --noinclude-unittest-mode=nofollow \
            --mingw64 \
            --assume-yes-for-downloads \
            --output-filename=myapp-win32.exe \
            main.py
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-win32
          path: myapp-win32.exe
          
      - name: Get upload URL
        id: set-upload
        run: echo "upload_url=${{ github.event.release.upload_url }}" >> $GITHUB_OUTPUT
          
  upload-release:
    needs: build-win32
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-win32

      - name: Verify downloaded file
        run: |
          ls -la
          file myapp-win32.exe || true

      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-win32.outputs.upload_url }}
          asset_path: ./myapp-win32.exe
          asset_name: myapp-windows-32bit.exe
          asset_content_type: application/octet-stream